<?php

namespace App\Console\Commands;

use App\Services\GoogleSheetsService;
use Illuminate\Console\Command;

class FetchGoogleSheetData extends Command
{
    protected $signature = 'sheets:fetch {--count= : –£–∫–∞–∂–∏—Ç–µ –∫–æ–ª-–≤–æ —Å—Ç—Ä–æ–∫ –¥–ª—è –ø–æ–∫–∞–∑–∞}';

    protected $description = '–ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ Google —Ç–∞–±–ª–∏—Ü—ã –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∏—Ö';

    public function handle()
    {
        try {
            $service = new GoogleSheetsService;
            $data = $service->getSheetData();

            if (empty($data)) {
                $this->error('–í Google —Ç–∞–±–ª–∏—Ü–µ –Ω–µ –±—ã–ª–æ –Ω–∞–π–¥–µ–Ω–æ –¥–∞–Ω–Ω—ã—Ö');

                return 1;
            }

            $rows = array_slice($data, 1);

            $count = $this->option('count');
            if ($count && is_numeric($count)) {
                $rows = array_slice($rows, 0, (int) $count);
            }

            if (empty($rows)) {
                $this->info('–ù–µ—Ç —Å—Ç—Ä–æ–∫ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è');

                return 0;
            }

            return $this::showCleanProgress($rows);

        } catch (\Exception $e) {
            $this->error('Error: '.$e->getMessage());

            return 1;
        }
    }

    private function showCleanProgress($rows)
    {
        $this->info('üîÑ –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ Google —Ç–∞–±–ª–∏—Ü—ã...');
        $this->line('üìä –í—Å–µ–≥–æ —Å—Ç—Ä–æ–∫ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: '.count($rows));
        $this->newLine();

        $bar = $this->output->createProgressBar(count($rows));
        $bar->setFormat(' %current%/%max% [%bar%] %percent:3s%%');
        $bar->start();

        $results = [];
        foreach ($rows as $index => $row) {
            $id = $row[0] ?? '–ù/–î';
            $comment = $row[6] ?? '-';

            $results[] = [
                'id' => $id,
                'comment' => $comment,
            ];

            $bar->advance();
            // –ò–º–∏—Ç–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏, –∏–Ω–∞—á–µ –ø–æ–ª–æ—Å–∫–∞ —Å–ª–∏—à–∫–æ–º –±—ã—Å—Ç—Ä–æ –∑–∞–ø–æ–ª–Ω—è–µ—Ç—Å—è
            // –î–∞–∂–µ –ø—Ä–∏ –ø–æ–ª—Å–æ—Ç–Ω–∏ —Ç—ã—Å—è—á –¥–∞–Ω–Ω—ã—Ö, –≤—Å—ë —Ä–∞–≤–Ω–æ –∑–∞–ø–æ–ª–Ω—è–µ—Ç—Å—è –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ
            usleep(100);
        }

        $bar->finish();
        $this->newLine(2);

        $this->info('‚úÖ –í—ã–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
        $this->newLine();

        foreach ($results as $result) {
            $this->line("ID: {$result['id']} | –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {$result['comment']}");
        }

        return 0;
    }
}
